// MySQL db prisma schema for eSentry
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String          @id @default(cuid())
  name          String?
  username      String?         @unique
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  monitors      Monitor[]       // This connects the User model to the Monitor model
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?
  refresh_token_expires_in Int?
  user                     User?   @relation(fields: [userId], references: [id])
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  @@unique([provider, providerAccountId])
  @@index([userId])
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  @@index([userId])
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
}

model Monitor {
  id                 Int      @id @default(autoincrement())
  userId             String
  keywords           String?  @db.VarChar(255)
  seller             String?  @db.VarChar(255)
  chatId             String?  @db.VarChar(255)
  email              String?  @db.VarChar(255)
  recentLink         String?  @db.VarChar(255)
  minPrice           Decimal? @db.Decimal(10, 2)
  maxPrice           Decimal? @db.Decimal(10, 2)
  conditionNew       Boolean?
  conditionOpenBox   Boolean?
  conditionUsed      Boolean?
  excludeKeywords    String?  @db.VarChar(255)
  active             Boolean? @default(false)
  
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  
  @@index([userId])
}
